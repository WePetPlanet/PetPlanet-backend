server.port= 8880
#服务名
spring.application.name= petplanet-gateway
##nacos服务发现地址，可以将应用程序连接到Nacos服务器以注册并发现其它服务
#spring.cloud.nacos.discovery.server-addr= 124.220.36.202:8848
## 启用Spring Cloud Gateway与服务注册中心的集成，为动态路由提供自动化的支持。
## 这种集成允许Gateway在运行时自动更新其路由规则，并基于实际可用的服务实例进行负载平衡。
#spring.cloud.gateway.discovery.locator.enabled=true
## 用服务发现，并将服务实例的名称转换为小写，以便在网关路由中使用。从而避免了大小写问题可能引起的错误。
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true

#security 配置
spring.security.user.name=admin
spring.security.user.password=admin

#minion??


# jwt
timing.jwt.secret-key=谁能想到我是中文?
#过期时间默认是30分
timing.jwt.validate-in-ms=360000

# redis
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=124.220.36.202
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=9Yi2L13Fd6z5p4lx8GwQEfuTKHjN
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000

#数据库
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://124.220.36.202:3306/petplanet?characterEncoding=utf-8&useSSL=false
spring.datasource.username=petplanet
spring.datasource.password=petplanet
#初始化物理连接的个数
initialSize=5
#最大连接池数量
maxActive=10
#获取连接时最大等待时间
maxWait=3000
#用来检测连接是否有效的sql
validationQuery=SELECT 1
#保证安全性！
testWhileIdle=true
